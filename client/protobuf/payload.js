/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.Payload');
goog.provide('proto.Payload.Action');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.CreateAgentAction');
goog.require('proto.CreateAssetAction');
goog.require('proto.TouchAssetAction');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Payload.displayName = 'proto.Payload';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Payload} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    action: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createAsset: (f = msg.getCreateAsset()) && proto.CreateAssetAction.toObject(includeInstance, f),
    createAgent: (f = msg.getCreateAgent()) && proto.CreateAgentAction.toObject(includeInstance, f),
    touchAsset: (f = msg.getTouchAsset()) && proto.TouchAssetAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Payload}
 */
proto.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Payload;
  return proto.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Payload}
 */
proto.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Payload.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.CreateAssetAction;
      reader.readMessage(value,proto.CreateAssetAction.deserializeBinaryFromReader);
      msg.setCreateAsset(value);
      break;
    case 4:
      var value = new proto.CreateAgentAction;
      reader.readMessage(value,proto.CreateAgentAction.deserializeBinaryFromReader);
      msg.setCreateAgent(value);
      break;
    case 5:
      var value = new proto.TouchAssetAction;
      reader.readMessage(value,proto.TouchAssetAction.deserializeBinaryFromReader);
      msg.setTouchAsset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Payload} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCreateAsset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CreateAssetAction.serializeBinaryToWriter
    );
  }
  f = message.getCreateAgent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CreateAgentAction.serializeBinaryToWriter
    );
  }
  f = message.getTouchAsset();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.TouchAssetAction.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.Payload.Action = {
  CREATE_ASSET: 0,
  CREATE_AGENT: 1,
  TOUCH_ASSET: 2
};

/**
 * optional Action action = 1;
 * @return {!proto.Payload.Action}
 */
proto.Payload.prototype.getAction = function() {
  return /** @type {!proto.Payload.Action} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Payload.Action} value */
proto.Payload.prototype.setAction = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 timestamp = 2;
 * @return {number}
 */
proto.Payload.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Payload.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional CreateAssetAction create_asset = 3;
 * @return {?proto.CreateAssetAction}
 */
proto.Payload.prototype.getCreateAsset = function() {
  return /** @type{?proto.CreateAssetAction} */ (
    jspb.Message.getWrapperField(this, proto.CreateAssetAction, 3));
};


/** @param {?proto.CreateAssetAction|undefined} value */
proto.Payload.prototype.setCreateAsset = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.Payload.prototype.clearCreateAsset = function() {
  this.setCreateAsset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Payload.prototype.hasCreateAsset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CreateAgentAction create_agent = 4;
 * @return {?proto.CreateAgentAction}
 */
proto.Payload.prototype.getCreateAgent = function() {
  return /** @type{?proto.CreateAgentAction} */ (
    jspb.Message.getWrapperField(this, proto.CreateAgentAction, 4));
};


/** @param {?proto.CreateAgentAction|undefined} value */
proto.Payload.prototype.setCreateAgent = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.Payload.prototype.clearCreateAgent = function() {
  this.setCreateAgent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Payload.prototype.hasCreateAgent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TouchAssetAction touch_asset = 5;
 * @return {?proto.TouchAssetAction}
 */
proto.Payload.prototype.getTouchAsset = function() {
  return /** @type{?proto.TouchAssetAction} */ (
    jspb.Message.getWrapperField(this, proto.TouchAssetAction, 5));
};


/** @param {?proto.TouchAssetAction|undefined} value */
proto.Payload.prototype.setTouchAsset = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.Payload.prototype.clearTouchAsset = function() {
  this.setTouchAsset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Payload.prototype.hasTouchAsset = function() {
  return jspb.Message.getField(this, 5) != null;
};


